- PRIMARY!!!
    - Move to C++ because of bad D3D12 compatibility with C.

- Core
    - More significant logs. Have to be almost everywhere, BUT DO NOT TRASH THE CODE!
    - Complete core\platform.h
    - Move all STD includes from platform.h to pch.h?
    - Get rid of the interface stuff and swith to function pointers?
    - ACS (Application Component System)

- Tools
    - Several simultaneous read operations under the same file?
    - Hash table
    - AsyncFileGroup (see engine/tools/async_file.h)

- Build
    - [Pre?]build system. Build only edited files
      (source file change time > .obj file change time)?

- Window
    - Switch to DPI stuff for monitor and window adjustment?
    - Fix fullscreen transition

- GPU
    - TODOs in engine/platform/d3d12_gpu_memory_manager.h
    - Switch from Placed Resources to Reserved Resources?
    - Clean up GPUMemoryManager and GPUProgramManager and Renderer
    - Batch rendering.
    - Save shaders bytecode in some files and compile only shaders that
      source file change time > bytecode file change time?
    - Do ResizeGPUBuffers when we choose another screen dimension. (After UI implementation)
    - Custom compute shader's parser and ComputeProgram generation
    - User-side GPU command lists and bundles?
    - Several adapters support?

- Graphics
    - Do I really need custom shaders???
    - Custom graphics shader's parser and GraphicsProgram generation
        - SRVs, UAVs, static samplers, tables (, constants?)
        - Hash table for interns
        - Add Root Signature v1.1 specific settings.
        - Includes
        - Parse templates (Buffer<type> name; vector<type, dim> name; ...)
        - Stream output
    - Switch from 1 to 3 Render Targets for OIT
    - Weighted Blended OIT
    - Support triangle strips (define topology in shaders?)
    - Support stream output (define it in shaders too?)
    - SubTextures
    - Entity (component?) system
    - Particle system
    - TextRenderer (DirectWrite + D2D)

- Sound
    - Create a common audio session for entire program
    - Allow to create more audio streams
    - Different callbacks for audios and sounds (fx)

- Editor
    - UI (ImGUI or Nuklear or write my own?)
    - Vertex and index buffer generation.
    - Ability to choose render targets' (framebuffers') dimension. // What I meant by that??
