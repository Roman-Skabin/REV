- Core
    - Complete core\platform.h
    - Move all STD includes from platform.h to pch.h?
    - Get rid of the interface stuff and swith to function pointers?
    - Rethink memory management
    - Scene serialization
    - Asset manager
    - Custom memcpy and memcmp
    - Single namespace for everything? (get rid of Math and GPU namespaces)

- Tools
    - Several simultaneous read operations under the same file?
    - Hash table

- Build
    - [Pre?]build system. Build only edited files
      (source file change time > .obj file change time)?

- Window
    - Switch to DPI stuff for monitor and window adjustment?

- Math
    - Quaternions

- GPU
    - Add textures to the batch render.
    - Save shaders bytecode in some files and compile only shaders that
      source file change time > bytecode file change time?
    - Custom compute shader's parser and ComputeProgram generation
    - Several adapters support? (NVidia has gotten rid of SLI so shall we?)
    - Cross platform shaders.

- Graphics
    - SRVs (textures), UAVs (rwbuffers, rwtextures), static samplers, (tables, constants?)
    - Add Root Signature v1.1 specific settings.
    - Includes
    - Stream output
    - Switch from 1 to 3 Render Targets for OIT
    - Weighted Blended OIT
    - Support triangle strips (define topology in shaders?). Probably needs for batch rendering.
    - Support stream output (define it in shaders too?)
    - Meshes
    - SubTextures
    - Entity (component?) system
    - Particle system
    - TextRenderer (DirectWrite + D2D)

- Sound
    - Mixer
    - Create a common audio session for entire program
    - Allow to create more audio streams

- Editor
    - UI (ImGUI or Nuklear or write my own?)

- Other
    - Rewrite sound in C++
    - Some documenting?
