- Core
    - Complete core\platform.h
    - Scene serialization
    - ISA wide CompareMemory // @Optimization
    - Single namespace for everything? (get rid of Math and GPU namespaces)
    - Minimize number of system calls // @Optimization
    - Mesh files
    - Max view distance in settings? (max LOD & far)

- Tools
    - Wait for multiple events
    - Replace overlapped I/O with memory mapped files and work queu.
      That will be a lot more asynchronous since APC completion routines are called synchronously.
      Also there are a lot of "OS will do what it will suppose to do and you can not control that".
      Also I feel like system cache fetches will ruin our asynchronous stuff a lot.
      I want it be like "Hey read me this region of a file to this buffer, I will wait for completion later".
      So overlapped I/O is not that overlapped as it should be.
    - Create StaticString and StaticStringBuilder on arenas
    - Replace std::function in REV::Function
    - Hash table
    - UTF-8 strings?

- Git
    - Custom commit/push scripts with tags checks like Jon's nocheckin

- GPU
    - Review Wait stuff during the frame. I feel like we are waiting to much.
    - Several adapters support? (NVidia has gotten rid of SLI so shall we?)
    - Cross platform shaders?

- Graphics
    - static samplers, (constants?)
    - Forward Rendering
    - Multisampling
    - Add Root Signature v1.1 specific settings.
    - Switch from 1 to 3 Render Targets for OIT
    - Weighted Blended OIT
    - Support triangle strips (define topology in shaders?). Probably needs for batch rendering.
    - Support stream output (define it in shaders too?)
    - Meshes
    - PBR?
    - SubTextures
    - Entity (component?) system
    - Particle system
    - TextRenderer (DirectWrite + D2D)
    - Maya animation
    - Parse Blender's output files to custom format (static meshes)

- Sound
    - Mixer
    - Create a common audio session for entire program
    - Allow to create more audio streams

- Editor
    - UI (ImGUI or Nuklear or write my own?)
    - Picking and moving object with a mouse.
    - Selecting many entities and moving them as a group.
    - Uniting many "connected/overlapped" entities in one single mesh.

- Other
    - Rewrite sound in C++
    - Some documenting?
