- Architecture
    - ...

- Build
    - ...

- Core
    - Make engine's user pointer and sandbox thread safety
    - Remove user_callbacks struct from engine. There is
      no sense to store 'em in engine struct cuz we're calling
      'em from EngineRun. Though, then we have to move
      SoundProc/OnSound callback to the SoundBuffer or
      stay storing it in the engine struct cuz we're calling it
      from SoundThreadProc (from another thread).
    - Improve timer: public, name, segmented profiling, output result to... somewhere

- Tools
    - gpu/core/interns to the tools?

- Window
    - Switch to DPI stuff for monitor and window adjustment?

- Math
    - Adapt to different ISA vec.h and mat.h

- Graphics
    - Init DebugQueue and DebugList. Add InfoQueue
    - Create GPU buffers, heaps etc or just wrap existing // do some higher-level shit for the user-side
      (for Root Signature and not only)
    - Switch from 1 to 3 Render Targets (OIT needs 2 additional).
    - Custom graphics shader's parser and GraphicsProgram generation
        - More informative errors + there is something weird with the shaders' names.
        - Root Signature stuff
        - Includes
        - Template shit (Buffer<type> name; vector<type, dim> name; ...)
        - Stream output
    - Cleanup shader after we can parse SRVs, UAVs and CBVs
    - Weighted Blended OIT
    - Custom compute shader's parser and ComputeProgram generation
    - User-side GPU command lists and bundles
    - Support triangle strips (define topology in shaders?)
    - Support stream output (define it in shaders too?)
    - Textures
    - SubTextures
    - Entity system
    - Particle system

- Sound
    - Create a common audio session for entire program
    - Allow to create more audio streams
    - Different callbacks for audios and sounds (fx)
