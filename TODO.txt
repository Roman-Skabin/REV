Problems:
    - We have to define everything at least 2 times. In the code and in the shaders. (Samplers for instsance)
        - Solution #1: Custom Shaders? Argh, honestly, do not wanna write it.

- Core
    - Complete core\platform.h
    - Move all STD includes from platform.h to pch.h?
    - Get rid of the interface stuff and swith to function pointers? // @Optimization
    - Rethink memory management? // @Optimization
    - Scene serialization
    - Asset manager
    - Custom memcpy and memcmp // @Optimization
    - Single namespace for everything? (get rid of Math and GPU namespaces)
    - Minimize number of system calls // @Optimization
    - Vertex buffer/index files
    - Settings
        - Max view distance (max LOD & far)
        - Files search directories

- Tools
    - Several simultaneous read operations under the same async file?
    - Hash table
    - UTF-8 strings?
    - File

- Build
    - [Pre?]build system. Build only edited files
      (source file change time > .obj file change time)? // @Optimization

- Git
    - Custom commit/push scripts with tags checks like jblow's nocheckin

- Window
    - Switch to DPI stuff for monitor and window adjustment?

- Math

- GPU
    - Add textures to the batch render. // @Optimization
    - Save shaders bytecode in some files and compile only shaders that
      source file change time > bytecode file change time? // @Optimization
    - Several adapters support? (NVidia has gotten rid of SLI so shall we?)
    - Cross platform shaders.

- Graphics
    - SRVs (textures), UAVs (rwbuffers, rwtextures), static samplers, (tables, constants?)
    - Forward Rendering
    - Multisampling
    - Add Root Signature v1.1 specific settings.
    - Shader includes
    - Stream output
    - Switch from 1 to 3 Render Targets for OIT
    - Weighted Blended OIT
    - Support triangle strips (define topology in shaders?). Probably needs for batch rendering.
    - Support stream output (define it in shaders too?)
    - Meshes
    - PBR?
    - SubTextures
    - Entity (component?) system
    - Particle system
    - TextRenderer (DirectWrite + D2D)
    - Maya animation
    - Parse Blender's output files to custom format

- Sound
    - Mixer
    - Create a common audio session for entire program
    - Allow to create more audio streams

- Editor
    - UI (ImGUI or Nuklear or write my own?)

- Other
    - Rewrite sound in C++
    - Some documenting?
